"""Initial migration

Revision ID: 9fca82797069
Revises: 
Create Date: 2023-11-30 13:09:15.779511

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9fca82797069'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
                              existing_type=sa.VARCHAR(length=50),
                              type_=sa.String(length=60),
                              existing_nullable=False)

    with op.batch_alter_table('patient', schema=None) as batch_op:
        # Check if the column already exists before adding it
        if not any(col[1] == 'user_id' for col in op.get_bind().execute("PRAGMA table_info(patient);").fetchall()):
            batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=False))

    # Add foreign key constraint for user_id column in the patient table
    op.create_foreign_key('fk_patient_user', 'patient', 'user', ['user_id'], ['id'])

    with op.batch_alter_table('appointment', schema=None) as batch_op:
        # Check if the column already exists before adding it
        if not any(col[1] == 'new_date_column' for col in
                   op.get_bind().execute("PRAGMA table_info(appointment);").fetchall()):
            batch_op.add_column(sa.Column('new_date_column', sa.Date(), nullable=False))

        # Check if the column already exists before adding it
        if not any(col[1] == 'new_description_column' for col in
                   op.get_bind().execute("PRAGMA table_info(appointment);").fetchall()):
            batch_op.add_column(sa.Column('new_description_column', sa.String(length=255), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(length=60),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.drop_constraint('fk_patient_user', type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('appointment', schema=None) as batch_op:
        batch_op.drop_column('new_description_column')
        batch_op.drop_column('new_date_column')

    # ### end Alembic commands ###
